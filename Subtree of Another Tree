Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.

A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.

Code:

  bool areIdentical(TreeNode* root1, TreeNode* root2){
        
        if(root1 == NULL && root2 == NULL){
            return true; 
        }
        
        if(root1 == NULL || root2 == NULL){
            return false; 
        }
        
        return (root1->val == root2->val) && areIdentical(root1->left,root2->left) && areIdentical(root1->right, root2->right); 
        
    }
    
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        
        if(root == NULL){
            return false; 
        }
        
        if(subRoot == NULL){
            return false; 
        }
        
        if(areIdentical(root,subRoot)){
            return true; 
        }
        
        return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);   
        
    }
