Given the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed.

A subtree of a node node is node plus every node that is a descendant of node.

Code:

    TreeNode* pruneTree(TreeNode* root) {
        return containsOne(root) ? root: NULL;  
         
    }
    
    bool containsOne(TreeNode* node){
        if(node == NULL){
            return false; 
        }
        
        bool leftContainsOne = containsOne(node->left); 
        bool rightContainsOne = containsOne(node->right); 
        
        if(!leftContainsOne){
            node->left = NULL; 
        }
        
        if(!rightContainsOne){
            node->right = NULL; 
        }
        
        
        return node->val == 1 || leftContainsOne || rightContainsOne; 
        
    }
