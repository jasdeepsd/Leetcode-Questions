There are n rooms labeled from 0 to n - 1 and all the rooms are locked except for room 0. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.

When you visit a room, you may find a set of distinct keys in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.

Given an array rooms where rooms[i] is the set of keys that you can obtain if you visited room i, return true if you can visit all the rooms, or false otherwise.

Code:

    bool canVisitAllRooms(vector<vector<int>>& rooms) {      
        stack<int> keys = stack<int>({0});
        vector<bool> visited(rooms.size(), false); 
        int count =1; 
         
        visited[0] = true; 
        
        while(keys.size()){
            vector<int> vec = rooms[keys.top()];  
            keys.pop(); 
            
            for(int i =0; i<vec.size(); i++){
                if(!visited[vec[i]]){
                    visited[vec[i]] = true; 
                    keys.push(vec[i]); 
                    count++; 
                }
            }   
        }
        return rooms.size() == count; 
                
    }
